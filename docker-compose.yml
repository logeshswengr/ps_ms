version: '3.7'
services:

  ## Database for User Service
  postgres-user:
    platform: linux/amd64
    container_name: postgres-user
    image: amd64/postgres
    environment:
      POSTGRES_DB: user-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - ./postgres-user:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always

  ## Database for Movie Service
  postgres-movie:
    platform: linux/amd64
    container_name: postgres-movie
    image: amd64/postgres
    environment:
      POSTGRES_DB: movie-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - ./postgres-movie:/data/postgres
    expose:
      - "5433"
    ports:
      - "5433:5433"
    command: -p 5433
    restart: always

  ## Database for Theatre Service
  postgres-theatre:
    platform: linux/amd64
    container_name: postgres-theatre
    image: amd64/postgres
    environment:
      POSTGRES_DB: theatre-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - ./postgres-theatre:/data/postgres
    expose:
      - "5434"
    ports:
      - "5434:5434"
    command: -p 5434
    restart: always

  ## Keycloak Config
  ## Discovery Server logs Warnings if Zipkin is not started


  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
  ## Eureka Server Docker Compose Config

  discovery-server:
    platform: linux/amd64
    image: registry.hub.docker.com/logeshswengr/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
  ## Api Gateway Docker Compose Config

  api-gateway:
    platform: linux/amd64
    image: registry.hub.docker.com/logeshswengr/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8585:8080"
    expose:
      - "8585"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    command: [ "start-dev"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_HOSTNAME: keycloak
    ports:
      - "8080:8080"
    expose:
      - "8080"
    restart: always

  # Inventory Service Docker Compose Config
  theatre-service:
    platform: linux/amd64
    container_name: theatre-service
    image: registry.hub.docker.com/logeshswengr/theatre-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-theatre:5434/theatre-service
    ports:
      - "9093:9093"
    depends_on:
      - postgres-theatre
      - discovery-server
      - api-gateway
      - zipkin


  ## user-service Docker Compose Config
  user-service:
    platform: linux/amd64
    container_name: user-service
    image: registry.hub.docker.com/logeshswengr/user-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5431/user-service
    depends_on:
      - postgres-user
      - zipkin
      - discovery-server
      - api-gateway

  ## Product Service Docker Compose Config
  movie-service:
    platform: linux/amd64
    container_name: movie-service
    image: registry.hub.docker.com/logeshswengr/movie-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-movie:5433/movie-service
    depends_on:
      - postgres-movie
      - discovery-server
      - api-gateway
      - zipkin

  ## Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - movie-service
      - theatre-service
      - user-service


  ## Grafana
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus
